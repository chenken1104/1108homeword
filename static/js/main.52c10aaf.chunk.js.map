{"version":3,"sources":["serviceWorker.js","Card.js","CardList.js","SearchBox.js","Scorll.js","App.js","index.js","robots.js"],"names":["Boolean","window","location","hostname","match","Card","name","email","image","className","src","process","style","width","height","alt","CardList","robots","map","user","i","key","id","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","overflow","border","children","App","componentDidMount","fetch","then","response","json","users","console","log","setState","onSearchChange","event","searchField","target","value","state","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","username","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.52c10aaf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n \r\nconst Card = ({  name, email,image }) => {\r\n    const styles = {\r\n        width: '200px',\r\n        height:'200px'\r\n    };\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`${process.env.PUBLIC_URL}${image}`} style={styles} alt=\"robots\" />            \r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {robots.map((user, i) => {\r\n                return (\r\n                    <Card\r\n                        key={i}\r\n                        id={user.id}\r\n                        image={user.image}\r\n                        name={user.name}\r\n                        email={user.email}\r\n                    />\r\n                )\r\n            })\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n\r\n","import React from 'react'\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n                type=\"search\"\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react';\r\n\r\nconst Scroll = props => {\r\n    return (\r\n        <div\r\n            style={{ overflow: 'scroll', border: '1px solid black', height: '800px' }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox'\r\nimport Scroll from './Scorll'\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(`${process.env.PUBLIC_URL}/data/robots.json`)\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                console.log('users', users);\r\n                this.setState({ robots: users });\r\n            })\r\n    }\r\n\r\n    onSearchChange = event => {\r\n        this.setState({ searchField: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        });\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading...</h1>\r\n        } else {\r\n            return (\r\n                <div className=\"tc\">\r\n                   \r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport { robots } from './robots'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App robots={robots} />\n    </div>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// robots.js\r\n\r\nexport const robots = [\r\n    {\r\n        id: 1,\r\n        image:\"/img/1.jpg\",\r\n        name: '網頁計算機',\r\n        username: 'Bret',\r\n        email: '模擬計算機'\r\n    },\r\n    {\r\n        id: 2,\r\n        image:\"/img/2.png\",\r\n        name: '打怪小遊戲',\r\n        username: 'Antonette',\r\n        email: 'Monster Game'\r\n    },\r\n    {\r\n        id: 3,\r\n        image:\"/img/3.png\",\r\n        name: '記帳查詢工具',\r\n        username: 'Samantha',\r\n        email: ''\r\n    },\r\n    {\r\n        id: 4,\r\n        image:\"/img/4.png\",\r\n        name: '自訂長條圖',\r\n        username: 'Karianne',\r\n        email: '不規則長條圖'\r\n    },\r\n    {\r\n        id: 5,\r\n        image:\"/img/5.png\",\r\n        name: '模擬卡片',\r\n        username: 'Kamren',\r\n        email: 'Card'\r\n    },\r\n    {\r\n        id: 6,\r\n        image:\"/img/6.png\",\r\n        name: '美食查詢列表',\r\n        username: 'Leopoldo_Corkery',\r\n        email: 'Food'\r\n    },\r\n    {\r\n        id: 7,\r\n        image:\"/img/7.png\",\r\n        name: '卡片商店',\r\n        username: 'Elwyn.Skiles',\r\n        email: 'Store'\r\n    },\r\n    {\r\n        id: 8,\r\n        image:\"/img/8.jpg\",\r\n        name: '自訂表單',\r\n        username: 'Maxime_Nienow',\r\n        email: 'Solo'\r\n    },\r\n    {\r\n        id: 9,\r\n        image:\"/img/9.jpg\",\r\n        name: '影片',\r\n        username: 'Delphine',\r\n        email: 'Player'\r\n    },\r\n    {\r\n        id: 10,\r\n        image:\"/img/10.jpg\",\r\n        name: 'Music Player',\r\n        username: 'Moriah.Stanton',\r\n        email: '音樂'\r\n    }\r\n];"],"sourceRoot":""}